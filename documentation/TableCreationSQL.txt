SQL Statements

CREATE TABLE USER (
	USER_ID VARCHAR(20) NOT NULL,
	PASSWORD CHAR(32) NOT NULL,
	EMAIL VARCHAR(40),
	EMPLOYEE_ID VARCHAR(20),
	ROLE ENUM('Administrator','Buyer','Receiver','Supplier') NOT NULL,
	SUPPLIER_ID INT(10),
	PRIMARY KEY (USER_ID),
	FOREIGN KEY (ROLE) REFERENCES USER_ROLE(ROLE_NAME),
	FOREIGN KEY (SUPPLIER_ID) REFERENCES SUPPLIER(SUPPLIER_ID)
);

CREATE TABLE SUPPLIER (
	SUPPLIER_ID INT(10) NOT NULL AUTO_INCREMENT,
	NAME VARCHAR(50) NOT NULL,
	LEGAL_NAME VARCHAR(50),
	LEAD_TIME VARCHAR(20),
	SUPPLIER_COMMENT TEXT,
	SPECIAL_COMMENT TEXT,
	PRIMARY KEY (SUPPLIER_ID)
);

CREATE TABLE CONTACT_PERSON (
	CONTACT_PERSON_ID INT(10) NOT NULL AUTO_INCREMENT,
	SUPPLIER_ID INT(10) NOT NULL,
	LAST_NAME VARCHAR(30) NOT NULL,
	FIRST_NAME VARCHAR(30),
	PHONE_NUMBER CHAR(10),
	EMAIL VARCHAR (50),
	PRIMARY KEY (CONTACT_PERSON_ID),
	FOREIGN KEY (SUPPLIER_ID)REFERENCES SUPPLIER (SUPPLIER_ID) ON DELETE CASCADE
);

CREATE TABLE SUPPLIER_ADDRESS (
	ADDRESS_ID INT(10) NOT NULL AUTO_INCREMENT,
	SUPPLIER_ID INT(10) NOT NULL,
	ADDRESS_LINE_1 VARCHAR(50),
	ADDRESS_LINE_2 VARCHAR(50),
	CITY VARCHAR(50),
	PROV_STATE VARCHAR(30),
	COUNTRY VARCHAR(30),
	POSTAL_ZIP VARCHAR(10),
	PHONE_NUMBER CHAR(10),
	PRIMARY KEY (ADDRESS_ID),
	FOREIGN KEY (SUPPLIER_ID) REFERENCES SUPPLIER(SUPPLIER_ID) ON DELETE CASCADE
);

CREATE TABLE DAYS_OF_DELIVERY (
	SUPPLIER_ID INT(10) NOT NULL,
	DAY ENUM('Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday') NOT NULL,
	PRIMARY KEY (SUPPLIER_ID, DAY),
	FOREIGN KEY (SUPPLIER_ID) REFERENCES SUPPLIER(SUPPLIER_ID) ON DELETE CASCADE,
);

CREATE TABLE ITEM_CATEGORY (
	CAT_NAME VARCHAR(20) NOT NULL,
	COMMENT TEXT,
	PRIMARY KEY (CAT_NAME)
);

CREATE TABLE ITEM (
	ITEM_ID INT(6) NOT NULL AUTO_INCREMENT = 65000,
	DIST_CODE VARCHAR(15),
	ITEM_NAME VARCHAR(30) NOT NULL,
	RECEIPT_NAME VARCHAR(20),
	CATEGORY VARCHAR(20),
	UNIT VARCHAR(20),
	ITEM_TYPE ENUM('Market','Bistro','Catering') NOT NULL,
	COMMENT TEXT,
	LATEST_PRICE INT(10),
	SUPPLIER_ID INT(10) NOT NULL,
	U_ACTIVE_INA VARCHAR(50),
	U_BIZERBA VARCHAR(50),
	U_BRAND VARCHAR(50),
	U_CASE_SIZE VARCHAR(50),
	U_MINOR_REPO VARCHAR(50),
	U_COOKING_IN VARCHAR(50),
	U_COUNTRY VARCHAR(50),
	U_DATE_CREAT VARCHAR(50),
	U_DATE_MODIF VARCHAR(50),
	U_DESCRIPTO TEXT,
	U_EXPIRY_DAT VARCHAR(50),
	U_INGREDIENT VARCHAR(50),
	U_KEYWORDS VARCHAR(50),
	U_NOTES TEXT,
	U_ORDER VARCHAR(50),
	U_PLU VARCHAR(50),
	U_PRICE DECIMAL(10,2),
	U_SILVERWARE VARCHAR(50),
	U_SKU VARCHAR(50),
	U_STORAGE VARCHAR(50),
	U_STORAGE_TY VARCHAR(50),
	U_TYPE VARCHAR(50),
	U_UPC_CODE VARCHAR(50),
	U_USERNAME_C VARCHAR(50),
	U_USERNAME_M VARCHAR(50),
	U_PRICE_PER DECIMAL(10,2),
	U_TAX VARCHAR(50),
	U_SCALE VARCHAR(50),
	PRIMARY KEY (ITEM_ID),
	FOREIGN KEY (CATEGORY) REFERENCES ITEM_CATEGORY(CAT_NAME) ON UPDATE CASCADE,
	FOREIGN KEY (LATEST_PRICE) REFERENCES PRICE_HISTORY(PRICE_ID),
	FOREIGN KEY (SUPPLIER_ID) REFERENCES SUPPLIER(SUPPLIER_ID) ON DELETE CASCADE
);

ALTER TABLE ITEM AUTO_INCREMENT = 65000;

CREATE TABLE PRICE_HISTORY (
	PRICE_ID INT(10) NOT NULL AUTO_INCREMENT,
	ITEM_ID INT(6) NOT NULL,
	PRICE DECIMAL (8,2) NOT NULL,
	AUTHOR VARCHAR(20) NOT NULL,
	LOG_DATE DATETIME,
	PRIMARY KEY (PRICE_ID),
	FOREIGN KEY (ITEM_ID) REFERENCES ITEM(ITEM_ID) ON DELETE CASCADE,
	FOREIGN KEY (SUPPLIER_ID) REFERENCES SUPPLIER(SUPPLIERID),
	FOREIGN KEY (AUTHOR) REFERENCES USER(USER_ID)
);

CREATE TABLE PURCHASE_ORDER (
	PO_ID INT(10) NOT NULL AUTO_INCREMENT,
	STATUS ENUM('Queued','Submitted','Received','Returned','Cancelled') NOT NULL,
	CREATE_DATE DATETIME NOT NULL,
	SUBMIT_DATE DATETIME,
	DELIVERY_DATE DATE,
	DELIVERY_TIME CHAR(10),
	RECEIVE_DATE DATETIME,
	REF_NUMBER VARCHAR(10),
	COMMENT TEXT,
	SUPPLIER_ID INT(10) NOT NULL,
	PRIMARY KEY (PO_ID),
	FOREIGN KEY (SUPPLIER_ID) REFERENCES SUPPLIER(SUPPLIER_ID)
);

CREATE TABLE PO_LINE (
	PO_ID INT(10) NOT NULL AUTO_INCREMENT,
	PO_LINE_ID INT(3) NOT NULL,
	ITEM_ID INT(6) NOT NULL,
	QTY_ORDERED INT(10) NOT NULL,
	QTY_RECEIVED INT(10),
	COMMENT TEXT,
	AUTHOR VARCHAR(20) NOT NULL,
	PRICE_ID INT(10) NOT NULL,
	PRIMARY KEY (PO_ID, PO_LINE_ID),
	FOREIGN KEY (PO_ID) REFERENCES PURCHASE_ORDER(PO_ID) ON DELETE CASCADE,
	FOREIGN KEY (ITEM_ID) REFERENCES ITEM(ITEM_ID),
	FOREIGN KEY (AUTHOR) REFERENCES USER(USER_ID),
	FOREIGN KEY (PRICE_ID) REFERENCES PRICE_HISTORY(PRICE_ID)
);

CREATE TABLE RETURN_LINE (
	PO_ID INT(10) NOT NULL,
	RETURN_LINE_ID INT(3) NOT NULL,
	PO_LINE_ID INT(3) NOT NULL,
	RETURN_DATE DATE NOT NULL,
	QTY_RETURNED INT(10) NOT NULL,
	CREDIT_MEMO_NUM VARCHAR(20),
	COMMENT TEXT,
	AUTHOR VARCHAR(20) NOT NULL,
	PRIMARY KEY (PO_ID, RETURN_LINE_ID),
	FOREIGN KEY (PO_ID) REFERENCES PURCHASE_ORDER(PO_ID) ON DELETE CASCADE,
	FOREIGN KEY (PO_LINE_ID) REFERENCES PO_LINE(PO_LINE_ID),
	FOREIGN KEY (AUTHOR) REFERENCES USER(USER_ID)
);
